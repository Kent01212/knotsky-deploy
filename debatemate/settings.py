"""
Django settings for dabatemate project.

Generated by 'django-admin startproject' using Django 5.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
# debatemate/settings.py
from pathlib import Path

import dotenv
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

if not DEBUG:
    # Load dot env in production.
    dotenv.load_dotenv()

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

if DEBUG:
    SECRET_KEY = 'django-insecure-g6#&qhiow7uu(l+wusd@c96c*j4uiv#ccr@3ap*wg^tzncp7fj'
else:
    SECRET_KEY = bytes.fromhex(os.getenv('SECRET_KEY'))

ALLOWED_HOSTS = []


# Application definition
# https://docs.djangoproject.com/en/5.1/ref/settings/#installed-apps

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'debatemate.apps.user',
    'debatemate.apps.chat',
    'debatemate.apps.debate',
    'debatemate.apps.group',
    'debatemate.apps.bot',
]


# Authentication
# https://docs.djangoproject.com/en/5.1/topics/auth/customizing/#substituting-a-custom-user-model

LOGIN_URL = '/user/signin/'

LOGOUT_REDIRECT_URL = '/user/signin/'


# Middleware
# https://docs.djangoproject.com/en/5.1/ref/settings/#middleware

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]


# URL Configuration
# https://docs.djangoproject.com/en/5.1/topics/http/urls/

ROOT_URLCONF = 'debatemate.urls'


# Templates
# https://docs.djangoproject.com/en/5.1/topics/templates/

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / 'templates',
            BASE_DIR / 'debatemate' / 'apps' / 'user' / 'templates',
            BASE_DIR / 'debatemate' / 'apps' / 'chat' / 'templates',
            BASE_DIR / 'debatemate' / 'apps' / 'debate' / 'templates',
            BASE_DIR / 'debatemate' / 'apps' / 'group' / 'templates',
            BASE_DIR / 'debatemate' / 'apps' / 'bot' / 'templates',
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


# WSGI
# https://docs.djangoproject.com/en/5.1/howto/deployment/wsgi/

WSGI_APPLICATION = 'debatemate.wsgi.application'


# ASGI
# https://docs.djangoproject.com/en/5.1/howto/deployment/asgi/

ASGI_APPLICATION = 'debatemate.asgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Authentication
# https://docs.djangoproject.com/en/5.1/topics/auth/customizing/#substituting-a-custom-user-model

AUTH_USER_MODEL = 'user.User'


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Password hashers
# https://docs.djangoproject.com/en/5.1/ref/settings/#password-hashers

PASSWORD_HASHERS = [
    'django.contrib.auth.hashers.Argon2PasswordHasher',
    'django.contrib.auth.hashers.ScryptPasswordHasher',
    'django.contrib.auth.hashers.BCryptSHA256PasswordHasher',
    'django.contrib.auth.hashers.BCryptPasswordHasher',
    'django.contrib.auth.hashers.PBKDF2PasswordHasher',
    'django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher',
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [
    BASE_DIR / 'static',
    BASE_DIR / 'debatemate' / 'apps' / 'user' / 'static',
    BASE_DIR / 'debatemate' / 'apps' / 'chat' / 'static',
    BASE_DIR / 'debatemate' / 'apps' / 'debate' / 'static',
    BASE_DIR / 'debatemate' / 'apps' / 'group' / 'static',
    BASE_DIR / 'debatemate' / 'apps' / 'bot' / 'static',
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Email config
# https://docs.djangoproject.com/en/5.1/ref/settings/#email

if DEBUG:
    EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
else:
    ...  # TODO: implement email backend

# Media storage
# https://docs.djangoproject.com/en/5.1/ref/settings/#media-root

if DEBUG:
    MEDIA_ROOT = BASE_DIR / 'media'
    MEDIA_URL = '/media/'
else:
    ...  # TODO: implement media storage
